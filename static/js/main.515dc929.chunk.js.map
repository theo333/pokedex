{"version":3,"sources":["components/Header.js","components/CardInfo.js","components/Card.js","utils.js","components/Pokedex.js","components/SearchForm.js","components/Search.js","App.js","index.js"],"names":["Header","Card","id","name","weight","height","className","isSearch","currentPokemon","changePokemon","image","src","alt","onClick","disabled","color","size","CardInfo","getSinglePokemon","pokemonIdentifier","a","axios","get","data","forms","sprites","front_default","Pokedex","useState","setCurrentPokemon","currentId","setCurrentId","error","setError","useEffect","getPokemon","_currentPokemon","console","log","to","direction","SearchForm","onSubmit","setName","ev","preventDefault","toLowerCase","type","value","aria-label","aria-placeholder","placeholder","role","onChange","e","target","Search","handleSubmit","pokemonName","searchedPokemon","Object","keys","length","App","exact","path","component","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.515dc929.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\tPokemon Presenter\n\t\t</header>\n\t);\n};\n\nexport default Header;","import React from 'react';\n\n// displays Pokemon info\nconst Card = ({ id, name, weight, height }) => {\n\treturn (\n\t\t<div className='card-info'>\n\t\t\t<p>#<span>{id}</span></p>\n\t\t\t<p>Name: <span>{name}</span></p>\n\t\t\t<p>Weight: <span>{weight / 100} g</span></p>\n\t\t\t<p>Height: <span>{height / 10} m</span></p>\n\t\t</div>\n\t);\n};\n\nexport default Card;","import React from 'react';\nimport { ChevronLeft, ChevronRight } from 'react-feather';\nimport '../App.css';\n\nimport CardInfo from './CardInfo';\n\n// displays Pokemon image and info, forward and backward navigation \nconst Card = ({ isSearch, currentPokemon, changePokemon }) => {\n  const { id, name, weight, height, image } = currentPokemon;\n\n  return (\n    <div className='card'>\n      <img className='img' src={image} alt={`Pokemon character ${name} front`} />\n      {!isSearch ? (\n        <div className='nav'>\n          <button className='btn-nav' onClick={() => changePokemon('prev')} disabled={id === 1 ? `{true}` : ''}>\n            <ChevronLeft color='red' size={90} />\n          </button>\n          <button className='btn-nav' onClick={() => changePokemon('next')} >\n            <ChevronRight color='red' size={90} />\n          </button>\n        </div>\n      ) : ''}\n      <CardInfo\n        id={id}\n        name={name}\n        weight={weight}\n        height={height}\n      />\n    </div>\n  );\n}\n\nexport default Card;\n","import axios from 'axios';\n\n// gets Pokemon data from API\n// pokemonIdentifier: ID (integer) or name (string)\nconst getSinglePokemon = async (pokemonIdentifier) => {\n\t// TODO memoize data so that do not have to keep grabbing from API\n\tconst { data } = await axios.get(\n\t\t`https://pokeapi.co/api/v2/pokemon/${pokemonIdentifier}/`\n\t);\n\n\tconst { id, height, weight } = data;\n\tconst { name } = data.forms[0];\n\tconst image = data.sprites.front_default;\n\treturn {\n\t\tid,\n\t\tname,\n\t\theight,\n\t\tweight,\n\t\timage,\n\t};\n}\n\nexport default getSinglePokemon;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Search } from 'react-feather';\n\nimport Card from './Card';\nimport getSinglePokemon from '../utils';\n\nconst Pokedex = () => {\n  const [currentPokemon, setCurrentPokemon] = useState({});\n  const [currentId, setCurrentId] = useState(1);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getPokemon(currentId);\n  }, [currentId]);\n\n  // get single Pokemon object from API\n  // used to display single Pokemon\n  // pokemonIdentifier: ID (number)\n  const getPokemon = async (pokemonIdentifier) => {\n    try {\n      const _currentPokemon = await getSinglePokemon(pokemonIdentifier);\n      setCurrentPokemon(_currentPokemon);\n      setError('');\n    } catch (err) {\n      console.log('Card err: ', err);\n      setError(`Sorry there is no Pokemon with that ID.<br />Please try again.`);\n\n    }\n  };\n\n  // navigation: change Pokemon ID in order to move to previous or next Pokemon\n  const changePokemon = direction => {\n    // TODO add exceptions for first and last IDs\n    const newId = direction === 'prev' ? currentId - 1 : currentId + 1;\n    setCurrentId(newId);\n  };\n\n  return (\n    <>\n      <h1>Pokedex</h1>\n      <div className='nav-link'>\n        <Link to='/search'>\n          <span><Search size={24} color={'red'} /></span> Search\n          </Link>\n      </div>\n      {error ? <h2 className='error-msg'>{error}</h2> : ''}\n      <Card\n        isSearch={false}\n        currentPokemon={currentPokemon}\n        changePokemon={changePokemon}\n      />\n    </>\n  );\n};\n\nexport default Pokedex;\n","import React, { useState } from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n\tconst [name, setName] = useState('');\n\n\t// handles submit for form\n\tconst handleSubmit = ev => {\n\t\tev.preventDefault();\n\t\tonSubmit(name.toLowerCase());\n\n\t\t// clears input field\n\t\tsetName('');\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className='search-form'>\n\t\t\t<input\n\t\t\t\tclassName=''\n\t\t\t\ttype='text'\n\t\t\t\tname='name'\n\t\t\t\tvalue={name}\n\t\t\t\taria-label='Search'\n\t\t\t\taria-placeholder='enter Pokemon name'\n\t\t\t\tplaceholder='enter Pokemon name'\n\t\t\t\trole='searchbox'\n\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t/>\n\t\t\t<button type='submit'>\n\t\t\t\tSearch\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default SearchForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layers } from 'react-feather';\n\nimport SearchForm from './SearchForm';\nimport Card from './Card';\nimport getSinglePokemon from '../utils';\n\nconst Search = () => {\n\tconst [currentPokemon, setCurrentPokemon] = useState({});\n\tconst [error, setError] = useState('');\n\n\t// handles submit for search form\n\t// gets Pokemon data from API\n\tconst handleSubmit = async (pokemonName) => {\n\t\ttry {\n\t\t\tconst searchedPokemon = await getSinglePokemon(pokemonName);\n\t\t\tsetCurrentPokemon(searchedPokemon);\n\t\t\tsetError('');\n\t\t} catch (err) {\n\t\t\tconsole.log('Card err: ', err);\n\t\t\tsetError(`Sorry no results match your search terms: ${pokemonName}.  Please search again.`);\n\t\t\tsetCurrentPokemon({});\n\t\t};\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Search</h1>\n\t\t\t<div className='nav-link'>\n\t\t\t\t<Link to='/'>\n\t\t\t\t\t<span><Layers size={24} color={'red'} /></span> Pokedex\n      \t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<SearchForm onSubmit={handleSubmit} />\n\t\t\t{error ? <h3 className='error-msg'>{error}</h3> : ''}\n\t\t\t{Object.keys(currentPokemon).length ? (\n\t\t\t\t<Card isSearch={true} currentPokemon={currentPokemon} />\n\t\t\t) : ''}\n\t\t</>\n\t);\n};\n\nexport default Search;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Pokedex from './components/Pokedex';\nimport Search from './components/Search';\n\nconst App = () => {\n  return (\n    <main>\n      <Header />\n      <section className='container'>\n        < article className='main' >\n          <Switch>\n            <Route exact path='/search' component={Search} />\n            <Route path='/' component={Pokedex} />\n          </Switch>\n        </article>\n      </section>\n    </main >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  root\n);\n"],"sourceRoot":""}